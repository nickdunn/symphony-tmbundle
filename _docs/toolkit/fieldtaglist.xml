<?xml version="1.0"?>
<class type="class" name="fieldTagList" handle="fieldtaglist">
  <package name="toolkit" handle="toolkit"/>
  <location line="13">lib/toolkit/fields/field.taglist.php</location>
  <modifiers>
    <modifier>public</modifier>
  </modifiers>
  <superclass package="toolkit">Field</superclass>
  <description>
    <p>The Tag List field is really a different interface for the Select Box
 field, offering a tag interface that can have static suggestions,
 suggestions from another field or a dynamic list based on what an Author
 has previously used for this field.</p>
  </description>
  <inherited-fields>
    <class name="Field" package="toolkit">
      <field name="Database"/>
      <field name="_Parent"/>
      <field name="_engine"/>
      <field name="_fields"/>
      <field name="_key"/>
      <field name="_required"/>
      <field name="_showassociation"/>
      <field name="_showcolumn"/>
    </class>
  </inherited-fields>
  <methods>
    <method name="__construct" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="parent" type="mixed"/>
      </parameters>
      <location line="14">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Construct a new instance of this field.</p>
      </description>
      <tags>
        <tag group="Parameters" name="parent"><description><p>The class that created this Field object, usually the FieldManager, passed by reference.</p></description></tag>
      </tags>
    </method>
    <method name="__tagArrayToString" return="void">
      <modifiers>
        <modifier>private</modifier>
        <modifier>static</modifier>
      </modifiers>
      <parameters>
        <parameter name="tags" type="mixed"/>
      </parameters>
      <location line="160">lib/toolkit/fields/field.taglist.php</location>
    </method>
    <method name="allowDatasourceParamOutput" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="28">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Test whether this field supports data-source parameter output. This
 default implementation prohibits parameter output. Data-source
 parameter output allows this field to be provided as a parameter
 to other data-sources or XSLT. Subclasses should override this if
 parameter output is supported.</p>
      </description>
      <tags>
        <tag group="Returns"><description><p>true if this supports data-source parameter output, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="appendFormattedElement" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="wrapper" type="XMLElement" package="toolkit" class="XMLElement"/>
        <parameter name="data" type="array"/>
        <parameter name="encode" type="bool"/>
        <parameter name="mode" type="string"/>
        <parameter name="entry_id" type="integer"/>
      </parameters>
      <location line="40">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Append the formatted xml output of this field as utilized as a data source.</p>
      </description>
      <tags>
        <tag group="Parameters" name="wrapper"><description><p>the xml element to append the xml representation of this to.</p></description></tag>
        <tag group="Parameters" name="data"><description><p>the current set of values for this field. the values are structured as for displayPublishPanel.</p></description></tag>
        <tag group="Parameters" name="encode"><description><p>(optional) flag as to whether this should be html encoded prior to output. this defaults to false.</p></description></tag>
        <tag group="Parameters" name="mode"><description><p>A field can provide ways to output this field's data. For instance a mode could be 'items' or 'full' and then the function would display the data in a different way depending on what was selected in the datasource included elements.</p></description></tag>
        <tag group="Parameters" name="entry_id"><description><p>(optional) the identifier of this field entry instance. defaults to null.</p></description></tag>
      </tags>
    </method>
    <method name="buildDSRetrievalSQL" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="data" type="array"/>
        <parameter name="joins" type="string"/>
        <parameter name="where" type="string"/>
        <parameter name="andOperation" type="bool"/>
      </parameters>
      <location line="266">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Construct the SQL statement fragments to use to retrieve the data of this
 field when utilized as a data source.</p>
      </description>
      <tags>
        <tag group="Parameters" name="data"><description><p>the supplied form data to use to construct the query from</p></description></tag>
        <tag group="Parameters" name="joins"><description><p>the join sql statement fragment to append the additional join sql to.</p></description></tag>
        <tag group="Parameters" name="where"><description><p>the where condition sql statement fragment to which the additional where conditions will be appended.</p></description></tag>
        <tag group="Parameters" name="andOperation"><description><p>(optional) true if the values of the input data should be appended as part of the where condition. this defaults to false.</p></description></tag>
        <tag group="Returns"><description><p>true if the construction of the sql was successful, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="canFilter" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="32">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Test whether this field can be filtered. This default implementation
 prohibits filtering. Filtering allows the xml output results to be limited
 according to an input parameter. Subclasses should override this if
 filtering is supported.</p>
      </description>
      <tags>
        <tag group="Returns"><description><p>true if this can be filtered, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="canImport" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="36">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Test whether this field can be imported. This default implementation
 prohibits importing. Subclasses should override this is importing is
 supported.</p>
      </description>
      <tags>
        <tag group="Deprecated"><description><p>This function will be removed in the next major release. It is unused by Symphony.</p></description></tag>
        <tag group="Returns"><description><p>true if this can be imported, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="canPrePopulate" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="206">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Test whether this field can be prepopulated with data. This default
 implementation does not support pre-population and, thus, returns false.</p>
      </description>
      <tags>
        <tag group="Returns"><description><p>true if this can be pre-populated, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="commit" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="182">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Commit the settings of this field from the section editor to
 create an instance of this field in a section.</p>
      </description>
      <tags>
        <tag group="Returns"><description><p>true if the commit was successful, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="createTable" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="248">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>The default field table construction method. This constructs the bare
 minimum set of columns for a valid field table. Subclasses are expected
 to overload this method to create a table structure that contains
 additional columns to store the specific data created by the field.</p>
      </description>
    </method>
    <method name="displayDatasourceFilterPanel" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="wrapper" type="XMLElement" package="toolkit" class="XMLElement"/>
        <parameter name="data" type="mixed"/>
        <parameter name="errors" type="mixed"/>
        <parameter name="fieldnamePrefix" type="mixed"/>
        <parameter name="fieldnamePostfix" type="mixed"/>
        <parameter name="fieldNamePrefix" type="string"/>
        <parameter name="fieldNameSuffix" type="string"/>
      </parameters>
      <location line="63">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Display the default data-source filter panel.</p>
      </description>
      <tags>
        <tag group="Parameters" name="wrapper"><description><p>the input XMLElement to which the display of this will be appended.</p></description></tag>
        <tag group="Parameters" name="data"><description><p>(optional) the input data. this defaults to null.</p></description></tag>
        <tag group="Parameters" name="errors"><description><p>(optional) the input error collection. this defaults to null.</p></description></tag>
        <tag group="Parameters" name="fieldNamePrefix"><description><p>the prefix to apply to the display of this.</p></description></tag>
        <tag group="Parameters" name="fieldNameSuffix"><description><p>the suffix to apply to the display of this.</p></description></tag>
      </tags>
    </method>
    <method name="displayPublishPanel" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="wrapper" type="XMLElement" package="toolkit" class="XMLElement"/>
        <parameter name="data" type="array"/>
        <parameter name="flagWithError" type="mixed"/>
        <parameter name="fieldnamePrefix" type="string"/>
        <parameter name="fieldnamePostfix" type="mixed"/>
        <parameter name="entry_id" type="integer"/>
        <parameter name="fieldnameSuffix" type="string"/>
      </parameters>
      <location line="86">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Display the publish panel for this field. The display panel is the
 interface shown to Authors that allow them to input data into this 
 field for an Entry.</p>
      </description>
      <tags>
        <tag group="Parameters" name="wrapper"><description><p>the xml element to append the html defined user interface to this field.</p></description></tag>
        <tag group="Parameters" name="data"><description><p>(optional) any existing data that has been supplied for this field instance. this is encoded as an array of columns, each column maps to an array of row indexes to the contents of that column. this defaults to null.</p></description></tag>
        <tag group="Parameters" name="flagWithError"><description><p>(optional) flag with error defaults to null.</p></description></tag>
        <tag group="Parameters" name="fieldnamePrefix"><description><p>(optional) the string to be prepended to the display of the name of this field. this defaults to null.</p></description></tag>
        <tag group="Parameters" name="fieldnameSuffix"><description><p>(optional) the string to be appended to the display of the name of this field. this defaults to null.</p></description></tag>
        <tag group="Parameters" name="entry_id"><description><p>(optional) the entry id of this field. this defaults to null.</p></description></tag>
      </tags>
    </method>
    <method name="displaySettingsPanel" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="wrapper" type="XMLElement" package="toolkit" class="XMLElement"/>
        <parameter name="errors" type="mixed"/>
      </parameters>
      <location line="210">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Display the default settings panel, calls the <code>buildSummaryBlock</code>
 function after basic field settings are added to the wrapper.</p>
      </description>
      <tags>
        <tag group="See Also" package="" class="buildSummaryBlock" path="buildSummaryBlock()">buildSummaryBlock()</tag>
        <tag group="Parameters" name="wrapper"><description><p>the input XMLElement to which the display of this will be appended.</p></description></tag>
        <tag group="Parameters" name="errors"><description><p>(optional) the input error collection. this defaults to null.</p></description></tag>
      </tags>
    </method>
    <method name="findAllTags" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="119">lib/toolkit/fields/field.taglist.php</location>
    </method>
    <method name="findDefaults" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="fields" type="mixed"/>
        <parameter name="settings" type="array"/>
      </parameters>
      <location line="202">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Allows a field to set default settings.</p>
      </description>
      <tags>
        <tag group="Parameters" name="settings"><description><p>the array of settings to populate with their defaults.</p></description></tag>
      </tags>
    </method>
    <method name="prepareTableValue" return="string">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="data" type="array"/>
        <parameter name="link" type="XMLElement" package="toolkit" class="XMLElement"/>
      </parameters>
      <location line="170">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Format this field value for display in the publish index tables. By default,
 Symphony will truncate the value to the configuration setting <code>cell_truncation_length</code>.
 This function will attempt to use PHP's <code>mbstring</code> functions if they are available.</p>
      </description>
      <tags>
        <tag group="Parameters" name="data"><description><p>an associative array of data for this string. At minimum this requires a key of 'value'.</p></description></tag>
        <tag group="Parameters" name="link"><description><p>(optional) an xml link structure to append the content of this to provided it is not null. it defaults to null.</p></description></tag>
        <tag group="Returns"><description><p>the formatted string summary of the values of this field instance.</p></description></tag>
      </tags>
    </method>
    <method name="processRawFieldData" return="array">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="data" type="mixed"/>
        <parameter name="status" type="integer"/>
        <parameter name="simulate" type="bool"/>
        <parameter name="entry_id" type="mixed"/>
      </parameters>
      <location line="137">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Process the raw field data.</p>
      </description>
      <tags>
        <tag group="Parameters" name="data"><description><p>post data from the entry form</p></description></tag>
        <tag group="Parameters" name="status"><description><p>the status code resultant from processing the data.</p></description></tag>
        <tag group="Parameters" name="simulate"><description><p>(optional) true if this will tell the CF's to simulate data creation, false otherwise. this defaults to false. this is important if clients will be deleting or adding data outside of the main entry object commit function.</p></description></tag>
        <tag group="Parameters" name="entry_id"><description><p>(optional) the current entry. defaults to null.</p></description></tag>
        <tag group="Returns"><description><p>the processed field data.</p></description></tag>
      </tags>
    </method>
    <method name="requiresSQLGrouping" return="boolean">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters/>
      <location line="24">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Test whether this field requires grouping. This default implementation
 returns false.</p>
      </description>
      <tags>
        <tag group="Returns"><description><p>true if this field requires grouping, false otherwise.</p></description></tag>
      </tags>
    </method>
    <method name="set" return="void">
      <modifiers>
        <modifier>public</modifier>
      </modifiers>
      <parameters>
        <parameter name="field" type="mixed"/>
        <parameter name="value" type="mixed"/>
        <parameter name="setting" type="string"/>
      </parameters>
      <location line="19">lib/toolkit/fields/field.taglist.php</location>
      <description>
        <p>Fields have settings that define how that field will act in a section, including
 if it's required, any validators, if it can be shown on the entries tableetc. This
 function will set a setting to a value.  This function will set a setting to a value
 overwriting any existing value for this setting</p>
      </description>
      <tags>
        <tag group="Parameters" name="setting"><description><p>the setting key.</p></description></tag>
        <tag group="Parameters" name="value"><description><p>the value of the setting.</p></description></tag>
      </tags>
    </method>
  </methods>
  <inherited-methods package="toolkit" class="Field">
    <class name="Field" package="toolkit">
      <method name="__construct"/>
      <method name="allowDatasourceOutputGrouping"/>
      <method name="allowDatasourceParamOutput"/>
      <method name="appendFormattedElement"/>
      <method name="appendRequiredCheckbox"/>
      <method name="appendShowAssociationCheckbox"/>
      <method name="appendShowColumnCheckbox"/>
      <method name="buildDSRetrievalSQL"/>
      <method name="buildDSRetrivalSQL"/>
      <method name="buildFormatterSelect"/>
      <method name="buildLocationSelect"/>
      <method name="buildSortingSQL"/>
      <method name="buildSummaryBlock"/>
      <method name="buildValidationSelect"/>
      <method name="canFilter"/>
      <method name="canImport"/>
      <method name="canPrePopulate"/>
      <method name="canShowTableColumn"/>
      <method name="canToggle"/>
      <method name="checkFields"/>
      <method name="checkPostFieldData"/>
      <method name="cleanValue"/>
      <method name="commit"/>
      <method name="createSectionAssociation"/>
      <method name="createTable"/>
      <method name="displayDatasourceFilterPanel"/>
      <method name="displayPublishPanel"/>
      <method name="displaySettingsPanel"/>
      <method name="entryDataCleanup"/>
      <method name="fetchAssociatedEntryCount"/>
      <method name="fetchAssociatedEntryIDs"/>
      <method name="fetchAssociatedEntrySearchValue"/>
      <method name="fetchIncludableElements"/>
      <method name="findDefaults"/>
      <method name="get"/>
      <method name="getExampleFormMarkup"/>
      <method name="getParameterPoolValue"/>
      <method name="getToggleStates"/>
      <method name="groupRecords"/>
      <method name="handle"/>
      <method name="isFilterRegex"/>
      <method name="isSortable"/>
      <method name="mustBeUnique"/>
      <method name="name"/>
      <method name="prepareTableValue"/>
      <method name="processRawFieldData"/>
      <method name="remove"/>
      <method name="removeSectionAssociation"/>
      <method name="requiresSQLGrouping"/>
      <method name="set"/>
      <method name="setArray"/>
      <method name="setFromPOST"/>
      <method name="tearDown"/>
      <method name="toggleFieldData"/>
    </class>
  </inherited-methods>
</class>
